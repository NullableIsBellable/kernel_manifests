{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "0331971f_902ff1a8",
        "filename": "default.xml",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1858345
      },
      "writtenOn": "2022-03-30T18:21:40Z",
      "side": 1,
      "message": "Could we use NDK instead of platform/prebuilts/clang/host/linux-x86? It seems they both provide clang, but I am not sure the versioning promises of NDK vs clang",
      "range": {
        "startLine": 41,
        "startChar": 38,
        "endLine": 41,
        "endChar": 65
      },
      "revId": "bd056608f9835a8730757b6ad7c51637c80be75a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "108355b5_73c0cdeb",
        "filename": "default.xml",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1858345
      },
      "writtenOn": "2022-03-30T18:22:02Z",
      "side": 1,
      "message": "*ndk vs the other prebuilts clang project",
      "parentUuid": "0331971f_902ff1a8",
      "range": {
        "startLine": 41,
        "startChar": 38,
        "endLine": 41,
        "endChar": 65
      },
      "revId": "bd056608f9835a8730757b6ad7c51637c80be75a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "167aa513_2807f8c3",
        "filename": "default.xml",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1114194
      },
      "writtenOn": "2022-03-30T20:48:20Z",
      "side": 1,
      "message": "That\u0027s going to hamper our ability to test new releases of AOSP LLVM against the Android Kernel, as new releases would not be tested until a new release of the NDK is available. The NDK is released at a slower pace than AOSP LLVM is, so that added delay will hamper our ability to find+report+fix+respin AOSP LLVM when a release of AOSP LLVM breaks the Android kernel.\n\nSo it\u0027s possible, but I would prefer not to at this time.\n\nBut if this is interesting (so that we don\u0027t need two checkouts of prebuilt binaries of clang for kernel sources), I\u0027m happy to discuss further.",
      "parentUuid": "108355b5_73c0cdeb",
      "range": {
        "startLine": 41,
        "startChar": 38,
        "endLine": 41,
        "endChar": 65
      },
      "revId": "bd056608f9835a8730757b6ad7c51637c80be75a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "101c9e4d_2e4ee93d",
        "filename": "default.xml",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1402878
      },
      "writtenOn": "2022-03-31T14:57:01Z",
      "side": 1,
      "message": "this will collide if we combine kernel and platform manifests:\n\nthe platform defines:\n\n  \u003cproject path\u003d\"prebuilts/ndk\" name\u003d\"platform/prebuilts/ndk\" groups\u003d\"pdk\" clone-depth\u003d\"1\" /\u003e\nhttps://android.googlesource.com/platform/manifest/+/refs/heads/master/default.xml#1044",
      "revId": "bd056608f9835a8730757b6ad7c51637c80be75a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a06f7680_85838c1e",
        "filename": "default.xml",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1114194
      },
      "writtenOn": "2022-03-31T17:18:46Z",
      "side": 1,
      "message": "Also, while the initial support of UAPI header tests will use a prebuilt bionic provided by the NDK (which also includes yet another copy of the prebuilt AOSP LLVM), once we\u0027ve transitioned Android kernel builds to kleaf then we can drastically simplify the dependencies by building bionic from source via Bazel. At that point, we can drop the NDK prebuilt dependency.",
      "parentUuid": "167aa513_2807f8c3",
      "range": {
        "startLine": 41,
        "startChar": 38,
        "endLine": 41,
        "endChar": 65
      },
      "revId": "bd056608f9835a8730757b6ad7c51637c80be75a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3d6301b4_53a7a11e",
        "filename": "default.xml",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1114194
      },
      "writtenOn": "2022-03-31T17:18:46Z",
      "side": 1,
      "message": "Are we moving kernel builds into the platform builds?\n\nDo standalone kernel builds need to continue to work until such a transition? If so, then it sounds like the combined platform+kernel build MUST checkout the NDK TWICE.  Then do you have an opinion on what I call this checkout?\n\nOtherwise, if we\u0027re just going to cut over to combined platform+kernel builds and disable/spin down the current kernel builds, then I could probably drop this change outright and simply use the platform\u0027s NDK prebuilt checkout. But I\u0027m guessing we\u0027re not ready to do so quite yet?",
      "parentUuid": "101c9e4d_2e4ee93d",
      "revId": "bd056608f9835a8730757b6ad7c51637c80be75a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}