{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "9acc628e_de8999f8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1402878
      },
      "writtenOn": "2021-01-20T20:21:13Z",
      "side": 1,
      "message": "prebuilts/misc is deprecated. And lz4 has been added to the kernel-build-tools\n\nhttps://android.googlesource.com/kernel/prebuilts/build-tools/+/refs/heads/master/linux-x86/bin/\n\nif using build/build.sh that is already in PATH",
      "revId": "e6e7cfdf0974e3c234b4b33631be2cebac200bd2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d9d11be8_127c8704",
        "filename": "default.xml",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1402878
      },
      "writtenOn": "2021-01-20T20:21:13Z",
      "side": 1,
      "message": "lz4 is already part of the kernel-build-tools",
      "revId": "e6e7cfdf0974e3c234b4b33631be2cebac200bd2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6f894e73_3143867a",
        "filename": "default.xml",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1437603
      },
      "writtenOn": "2021-02-09T19:09:49Z",
      "side": 1,
      "message": "Revisting this.  Using the lz4 from kernel-build-tools, and relying on the kernel build to generate an `Image.lz4` results in a kernel image which does not boot.\n\nIf I instead use the one from prebuilts/misc to generate the Image.lz4, it boots.\n\nHere\u0027s what I added to my build.config to make it work.\n```\nEXTRA_CMDS\u003d\"lz4_compress\"\nLZ4_PREBUILTS_BIN\u003dprebuilts/misc/linux-x86/lz4\nfunction lz4_compress() {\n        ./${LZ4_PREBUILTS_BIN}/lz4c -f ${OUT_DIR}/arch/arm64/boot/Image ${OUT_DIR}/arch/arm64/boot/Image.lz4\n}\n```\n\nAre there other arm64 platforms using lz4 from kernel-build-tools to generate an Image.lz4 which actually boots?",
      "parentUuid": "d9d11be8_127c8704",
      "revId": "e6e7cfdf0974e3c234b4b33631be2cebac200bd2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e6e0b443_ac034971",
        "filename": "default.xml",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1437603
      },
      "writtenOn": "2021-02-09T20:24:11Z",
      "side": 1,
      "message": "OK, so I think I figured out the problem.\n\nTurns out that problem is not the lz4 binary itself.  The problem is using kernel\u0027s Image.lz4 make target.  The kernel build passes the legacy option (-l) to lz4 which u-boot fails to uncompress.\n\nTherefore, the build.config has to have a separate step to generate an Image.lz4 which does not pass -l to lz4.",
      "parentUuid": "6f894e73_3143867a",
      "revId": "e6e7cfdf0974e3c234b4b33631be2cebac200bd2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2f8ed703_85579de9",
        "filename": "default.xml",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1293738
      },
      "writtenOn": "2021-02-10T03:59:04Z",
      "side": 1,
      "message": "Hi Kevin. I dug into this a bit more for you, and I think I know where this is coming from. In upstream Linux there is this bit of code in scripts/Makefile.lib:\n\nquiet_cmd_lz4 \u003d LZ4     $@\n      cmd_lz4 \u003d { cat $(real-prereqs) | $(LZ4) -l -c1 stdin stdout; \\\n                  $(size_append); } \u003e $@\n\nOn the Android side we\u0027ve additionally added \"-12 --favor-decSpeed\" because we found the trade-off was better than the default (but not by much), but we never modified the legacy mode.\n\nThis turns out to be used by any architecture which relies on the built-in decompression code, like x86. The lz4 code in the kernel only handles the legacy format. So, kbuild will compress initramfs and vmlinux.bin using the legacy flag.\n\nBut if we pivot to the arm64 world, there\u0027s no more zImage. The bootloader takes care of it. And you\u0027re right that predominantly, they expect the non-legacy format. Indeed the default Image.lz4 code in arch/arm64/boot/Makefile just does:\n\n$(obj)/Image.lz4: $(obj)/Image FORCE\n        $(call if_changed,lz4)\n\nWhich compresses with default flags, and doesn\u0027t use the legacy flag.\n\nBut we compress the GKI artifact offline on our gki/download_from_ci script, and we copied the flags over from kbuild.. so now we\u0027re stuck with an arm64 Image.lz4 that doesn\u0027t use the legacy flag ðŸ˜ž\n\nI will check internally what it\u0027s going to take to unwind this.. as GKI has already been distributed as arm64 boot images it might be tricky, but hopefully not.",
      "parentUuid": "e6e0b443_ac034971",
      "revId": "e6e7cfdf0974e3c234b4b33631be2cebac200bd2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}